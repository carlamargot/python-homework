# importing PyBank data

import pandas as pd
import os 
pwd
'/Users/cmh/Desktop/FINTECH/PythonHomework/PyBank'

budget_data = pd.read_csv(r"/Users/cmh/Desktop/FINTECH/PythonHomework/PyBank/PyBank_Data.csv")

print(budget_data)
        Date  Profit/Losses
0   Jan-2010         867884
1   Feb-2010         984655
2   Mar-2010         322013
3   Apr-2010         -69417
4   May-2010         310503
..       ...            ...
81  Oct-2016         102685
82  Nov-2016         795914
83  Dec-2016          60988
84  Jan-2017         138230
85  Feb-2017         671099

[86 rows x 2 columns]
budget_data = pd.read_csv(r"/Users/cmh/Desktop/FINTECH/PythonHomework/PyBank/PyBank_Data.csv")
print(budget_data)
        Date  Profit/Losses
0   Jan-2010         867884
1   Feb-2010         984655
2   Mar-2010         322013
3   Apr-2010         -69417
4   May-2010         310503
..       ...            ...
81  Oct-2016         102685
82  Nov-2016         795914
83  Dec-2016          60988
84  Jan-2017         138230
85  Feb-2017         671099

[86 rows x 2 columns]

#Reading Headers 
print(budget_data.columns)
Index(['Date', 'Profit/Losses'], dtype='object')
print(budget_data['Date'])
0     Jan-2010
1     Feb-2010
2     Mar-2010
3     Apr-2010
4     May-2010
        ...   
81    Oct-2016
82    Nov-2016
83    Dec-2016
84    Jan-2017
85    Feb-2017
Name: Date, Length: 86, dtype: object

# Organizing by year
budget_data.sort_values(['Date'])
Date	Profit/Losses
3	Apr-2010	-69417
15	Apr-2011	793163
27	Apr-2012	1151518
39	Apr-2013	471435
51	Apr-2014	581943
...	...	...
32	Sep-2012	475062
44	Sep-2013	-1196225
56	Sep-2014	1166643
68	Sep-2015	568529
80	Sep-2016	768450
86 rows × 2 columns

budget_data['Date'].str.split('-')
#Spliting 'Date' string
​
budget_data['Date'].str.split('-')
0     [Jan, 2010]
1     [Feb, 2010]
2     [Mar, 2010]
3     [Apr, 2010]
4     [May, 2010]
         ...     
81    [Oct, 2016]
82    [Nov, 2016]
83    [Dec, 2016]
84    [Jan, 2017]
85    [Feb, 2017]
Name: Date, Length: 86, dtype: object
 budget_data['Date'].str.split('-',n=1,expand=True)

#Saving the split to access later 
month_year = budget_data['Date'].str.split('-',n=1,expand=True)
print(month_year)
      0     1
0   Jan  2010
1   Feb  2010
2   Mar  2010
3   Apr  2010
4   May  2010
..  ...   ...
81  Oct  2016
82  Nov  2016
83  Dec  2016
84  Jan  2017
85  Feb  2017

[86 rows x 2 columns]
month_year.rename(columns={0:'month', 1:'year'})
month	year
0	Jan	2010
1	Feb	2010
2	Mar	2010
3	Apr	2010
4	May	2010
...	...	...
81	Oct	2016
82	Nov	2016
83	Dec	2016
84	Jan	2017
85	Feb	2017
86 rows × 2 columns

# Counting duplicates of dates 
budget_data['Date'].unique() #shows unique dates i.e there are no data overlaps in this data 
array(['Jan-2010', 'Feb-2010', 'Mar-2010', 'Apr-2010', 'May-2010',
       'Jun-2010', 'Jul-2010', 'Aug-2010', 'Sep-2010', 'Oct-2010',
       'Nov-2010', 'Dec-2010', 'Jan-2011', 'Feb-2011', 'Mar-2011',
       'Apr-2011', 'May-2011', 'Jun-2011', 'Jul-2011', 'Aug-2011',
       'Sep-2011', 'Oct-2011', 'Nov-2011', 'Dec-2011', 'Jan-2012',
       'Feb-2012', 'Mar-2012', 'Apr-2012', 'May-2012', 'Jun-2012',
       'Jul-2012', 'Aug-2012', 'Sep-2012', 'Oct-2012', 'Nov-2012',
       'Dec-2012', 'Jan-2013', 'Feb-2013', 'Mar-2013', 'Apr-2013',
       'May-2013', 'Jun-2013', 'Jul-2013', 'Aug-2013', 'Sep-2013',
       'Oct-2013', 'Nov-2013', 'Dec-2013', 'Jan-2014', 'Feb-2014',
       'Mar-2014', 'Apr-2014', 'May-2014', 'Jun-2014', 'Jul-2014',
       'Aug-2014', 'Sep-2014', 'Oct-2014', 'Nov-2014', 'Dec-2014',
       'Jan-2015', 'Feb-2015', 'Mar-2015', 'Apr-2015', 'May-2015',
       'Jun-2015', 'Jul-2015', 'Aug-2015', 'Sep-2015', 'Oct-2015',
       'Nov-2015', 'Dec-2015', 'Jan-2016', 'Feb-2016', 'Mar-2016',
       'Apr-2016', 'May-2016', 'Jun-2016', 'Jul-2016', 'Aug-2016',
       'Sep-2016', 'Oct-2016', 'Nov-2016', 'Dec-2016', 'Jan-2017',
       'Feb-2017'], dtype=object)
budget_data['Date'].value_counts()
Apr-2011    1
Apr-2010    1
Nov-2014    1
Dec-2011    1
Apr-2016    1
           ..
Aug-2012    1
Nov-2015    1
Oct-2012    1
Mar-2012    1
Feb-2016    1
Name: Date, Length: 86, dtype: int64

# Question 1: 86 is the number of unique value counts in the Py_Bank_Data 
